buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"

    packagingOptions {
/*        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'*/
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    defaultConfig {
        applicationId "ru.allmoyki"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 10
        versionName "1" + getBuildString()
    }


    signingConfigs {
        release {
            storeFile file('C:/Users/dev/Downloads/Source/app/carwash.jks')
            storePassword "carwash"
            keyAlias "carwash"
            keyPassword "carwash"
        }
        debug {
            storeFile file('C:/Users/dev/Downloads/Source/app/carwash.jks')
            storePassword "carwash"
            keyAlias "carwash"
            keyPassword "carwash"

            /*         applicationVariants.all { variant ->
                def apk = variant.outputs.get(0).outputFile;
                def dir = file(apk.parent).absolutePath + File.separator
                def newPath = dir + "Все Мойки" + defaultConfig.versionName + ".apk"
                def outputFile = new File(newPath)
                variant.outputs.get(0).outputFile = outputFile
            }*/
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
     compile files('libs/volley.jar')
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.google.android.gms:play-services:8.1.0'
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'io.realm:realm-android:0.82.2'
    compile 'com.google.android.gms:play-services-ads:8.1.0'
    compile 'com.google.android.gms:play-services-analytics:7.3.0'
    compile 'com.google.android.gms:play-services-identity:8.1.0'
    compile 'com.google.android.gms:play-services-gcm:8.1.0'
    compile files('libs/gcm.jar')
}

def getBuildString() {
    def date = new Date()
    def formattedDate = date.format('yy.MM.dd.HH.mm')
    return formattedDate
}
